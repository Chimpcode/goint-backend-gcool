# The following types define the data model of the example service
# based on which the GraphQL API is generated
type Location @model {
    id: ID! @isUnique    # read-only (managed by Graphcool)
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    longitude: Float!
    latitude: Float!

    address: String

    storesAttached: [Store!]! @relation(name: "LocationsStore")
}

type Store @model {
    id: ID! @isUnique    # read-only (managed by Graphcool)
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    name: String!
    description: String

    locations: [Location!]! @relation(name: "LocationsStore")
    sectorsAttached: [Sector!]! @relation(name: "SectorStores")

}

type Sector @model {
    id: ID! @isUnique    # read-only (managed by Graphcool)
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    name: String!
    tags: [String!]

    stores: [Store!]! @relation(name: "SectorStores")

    postsAssigned: [Post!]! @relation(name: "PostSectors")
}

type User @model {
    id: ID! @isUnique    # read-only (managed by Graphcool)
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    group: String

    fullName: String!
    age: Int
    gender: String

    loginType: String

    email: String! @isUnique
    username: String! @isUnique
    password: String!

    facebookAccount: String

}

type Category @model {
    id: ID! @isUnique    # read-only (managed by Graphcool)
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    name: String!
    alias: String

    tags: [String!]

    companiesAttached: [Company!]! @relation(name: "CompanyCategories")
}

type Plan @model {
    id: ID! @isUnique    # read-only (managed by Graphcool)
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    type: String!
    duration: Int!

    subscribedCompanies: [Company!]! @relation(name: "CompanyPlan")
}

type Company @model {
    id: ID! @isUnique    # read-only (managed by Graphcool)
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    name: String!
    categories: [Category!]! @relation(name: "CompanyCategories")

    postCount: Int @defaultValue(value: 0)
    activePlan: Plan! @relation(name: "CompanyPlan")

    posts: [Post!]! @relation(name: "CompanyPosts")

}

type Post @model {
    id: ID! @isUnique    # read-only (managed by Graphcool)
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    expireAt: DateTime

    by: Company! @relation(name: "CompanyPosts")

    title: String! @defaultValue(value: "Untitle Post")
    type: String
    image: String
    description: String
    address: String

    tags: [String!]

    location: [Sector!]! @relation(name: "PostSectors")

    stock: Int! @defaultValue(value: 0)
}
